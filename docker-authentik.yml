---
networks:
  reverse-proxy:
    name: reverse-proxy
  authentik-internal:
    name: authentik-internal
    external: false

services:
  authentik-postgresql:
    image: docker.io/library/postgres:12-alpine
    container_name: authentik-postgresql
    hostname: authentik-postgresql
    networks:
      - authentik-internal
    environment:
      - POSTGRES_PASSWORD=${PG_PASS:?database password required}
      - POSTGRES_USER=${PG_USER:-authentik}
      - POSTGRES_DB=${PG_DB:-authentik}
    env_file:
      - .env
    volumes:
      - ${APPCONFIG_DIR}/authentik/database:/var/lib/postgresql/data
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -d $${POSTGRES_DB} -U $${POSTGRES_USER}"]
      start_period: 20s
      interval: 30s
      retries: 5
      timeout: 5s

  authentik-redis:
    image: docker.io/library/redis:alpine
    container_name: authentik-redis
    hostname: authentik-redis
    networks:
      - authentik-internal
    volumes:
      - ${APPCONFIG_DIR}/authentik/redis:/data
    restart: unless-stopped
    command: --save 60 1 --loglevel warning
    healthcheck:
      test: ["CMD-SHELL", "redis-cli ping | grep PONG"]
      start_period: 20s
      interval: 30s
      retries: 5
      timeout: 3s

  authentik-server:
    image: ${AUTHENTIK_IMAGE:-ghcr.io/goauthentik/server}:${AUTHENTIK_TAG:-2022.11.3}
    container_name: authentik-server
    hostname: authentik-server
    #ports:
    #   - "0.0.0.0:${AUTHENTIK_PORT_HTTP:-9000}:9000"
    #   - "0.0.0.0:${AUTHENTIK_PORT_HTTPS:-9443}:9443"
    networks:
      - reverse-proxy
      - authentik-internal
    environment:
      AUTHENTIK_REDIS__HOST: authentik-redis
      AUTHENTIK_POSTGRESQL__HOST: authentik-postgresql
      AUTHENTIK_POSTGRESQL__USER: ${PG_USER:-authentik}
      AUTHENTIK_POSTGRESQL__NAME: ${PG_DB:-authentik}
      AUTHENTIK_POSTGRESQL__PASSWORD: ${PG_PASS}
      AUTHENTIK_SECRET_KEY: ${AUTHENTIK_SECRET_KEY}
      # AUTHENTIK_ERROR_REPORTING__ENABLED: "true"
    env_file:
      - .env
    volumes:
      - ${APPCONFIG_DIR}/authentik/config/media:/media
      - ${APPCONFIG_DIR}/authentik/config/custom-templates:/templates
      - ${APPCONFIG_DIR}/authentik/geoip:/geoip
    restart: unless-stopped
    command: server
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.authentik-secure.entrypoints=websecure"
      - "traefik.http.routers.authentik-secure.rule=Host(`auth.${DOMAIN}`)"
      - "traefik.http.routers.authentik-secure.tls=true"
      - "traefik.http.routers.authentik-secure.service=authentik"
      - "traefik.http.routers.authentik-secure.priority=1"
      - "traefik.http.services.authentik.loadbalancer.server.port=9443"
      - "traefik.http.services.authentik.loadbalancer.serversTransport=noTLSVerify@file"
      - "traefik.http.services.authentik.loadbalancer.server.scheme=https"
      # ForwardAuth Configuration
      - "traefik.http.routers.authentik-forwardauth-secure.rule=HostRegexp(`{subdomain:[a-z0-9-]+}.${DOMAIN}`) && PathPrefix(`/outpost.goauthentik.io/`)"
      - "traefik.http.routers.authentik-forwardauth-secure.service=authentik"
      - "traefik.http.routers.authentik-forwardauth-secure.entrypoints=websecure"
      - "traefik.http.routers.authentik-forwardauth-secure.tls=true"
      - "traefik.http.middlewares.authentik-forwardauth.forwardauth.address=http://authentik-server:9000/outpost.goauthentik.io/auth/traefik"
      - "traefik.http.middlewares.authentik-forwardauth.forwardauth.trustForwardHeader=true"
      - "traefik.http.middlewares.authentik-forwardauth.forwardauth.authResponseHeaders=authorization,X-authentik-username,X-authentik-groups,X-authentik-email,X-authentik-name,X-authentik-uid,X-authentik-jwt,X-authentik-meta-jwks,X-authentik-meta-outpost,X-authentik-meta-provider,X-authentik-meta-app,X-authentik-meta-version,Remote-User,Remote-Groups,Remote-Name,Remote-Email"

  authentik-worker:
    image: ${AUTHENTIK_IMAGE:-ghcr.io/goauthentik/server}:${AUTHENTIK_TAG:-2022.11.3}
    container_name: authentik-worker
    hostname: authentik-worker
    # This is optional, and can be removed. If you remove this, the following will happen
    # - The permissions for the /media folders aren't fixed, so make sure they are 1000:1000
    # - The docker socket can't be accessed anymore
    user: root
    networks:
      - authentik-internal
    environment:
      AUTHENTIK_REDIS__HOST: authentik-redis
      AUTHENTIK_POSTGRESQL__HOST: authentik-postgresql
      AUTHENTIK_POSTGRESQL__USER: ${PG_USER:-authentik}
      AUTHENTIK_POSTGRESQL__NAME: ${PG_DB:-authentik}
      AUTHENTIK_POSTGRESQL__PASSWORD: ${PG_PASS}
      AUTHENTIK_SECRET_KEY: ${AUTHENTIK_SECRET_KEY}
    env_file:
      - .env
    volumes:
      - ${APPCONFIG_DIR}/authentik/config/media:/media
      - ${APPCONFIG_DIR}/authentik/config/certs:/certs
      - /var/run/docker.sock:/var/run/docker.sock
      - ${APPCONFIG_DIR}/authentik/config/custom-templates:/templates
      - ${APPCONFIG_DIR}/authentik/geoip:/geoip
    restart: unless-stopped
    command:
      worker
      # AUTHENTIK_ERROR_REPORTING__ENABLED: "true"

  # authentik-geoipupdate:
  #   image: "maxmindinc/geoipupdate:latest"
  #   container_name: authentik-geoipupdate
  #   hostname: authentik-geoipupdate
  #   environment:
  #     GEOIPUPDATE_EDITION_IDS: "GeoLite2-City"
  #     GEOIPUPDATE_FREQUENCY: "8"
  #   env_file:
  #     - .env
  #   volumes:
  #     - ${APPCONFIG_DIR}/authentik/geoip:/usr/share/GeoIP
