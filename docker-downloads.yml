---
networks:
  reverse-proxy:
    name: reverse-proxy
  downloads:
    name: downloads-internal

services:
  # Usenet
  sabnzbd:
    image: linuxserver/sabnzbd
    container_name: sabnzbd
    hostname: sabnzbd
    #ports:
    #- "8080:8080"
    networks:
      - downloads-internal
      - reverse-proxy
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
      - UMASK=${UMASK}
    volumes:
      - ${APPCONFIG_DIR}/sabnzbd:/config
      - ${DOWNLOAD_DIR}/usenet:/data/downloads/usenet
    restart: unless-stopped
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.nzbget-secure.entrypoints=websecure"
      - "traefik.http.routers.nzbget-secure.rule=Host(`nzb.${DOMAIN}`)"
      - "traefik.http.routers.nzbget-secure.tls=true"
      - "traefik.http.routers.nzbget-secure.middlewares=authentik-forwardauth@docker"

  # Torrents
  qflood:
    image: hotio/qflood
    container_name: qflood
    hostname: qflood
    #ports:
    #- "8080:8080"
    #- "3000:3000"
    networks:
      - downloads-internal
      - reverse-proxy
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
      - UMASK=${UMASK}
      #- FLOOD_AUTH=false
    volumes:
      - ${APPCONFIG_DIR}/qflood:/config
      - ${DOWNLOAD_DIR}/torrents:/data/downloads/torrents
      - /mnt/Transfer/torrents/completed:/data/completed
    restart: unless-stopped
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.flood-secure.entrypoints=websecure"
      - "traefik.http.routers.flood-secure.rule=Host(`flood.${DOMAIN}`)"
      - "traefik.http.routers.flood-secure.tls=true"
      - "traefik.http.routers.flood-secure.service=flood"
      - "traefik.http.services.flood.loadbalancer.server.port=3000"
      - "traefik.http.routers.torrent-secure.entrypoints=websecure"
      - "traefik.http.routers.torrent-secure.rule=Host(`torrent.${DOMAIN}`)"
      - "traefik.http.routers.torrent-secure.tls=true"
      - "traefik.http.routers.torrent-secure.service=torrent"
      - "traefik.http.services.torrent.loadbalancer.server.port=8080"

  # Unzipper
  unpackerr:
    image: hotio/unpackerr
    container_name: unpackerr
    hostname: unpackerr
    networks:
      - downloads-internal
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
      - UMASK=${UMASK}
    volumes:
      - ${APPCONFIG_DIR}/unpackerr:/config
      - ${DOWNLOAD_DIR}:/data/
    restart: unless-stopped
